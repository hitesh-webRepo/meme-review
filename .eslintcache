[{"D:\\Frontend\\memereview\\src\\index.tsx":"1","D:\\Frontend\\memereview\\src\\reportWebVitals.ts":"2","D:\\Frontend\\memereview\\src\\App.tsx":"3","D:\\Frontend\\memereview\\src\\components\\Navigation.tsx":"4","D:\\Frontend\\memereview\\src\\utils\\MemeComponent.tsx":"5","D:\\Frontend\\memereview\\src\\components\\HomePage.tsx":"6","D:\\Frontend\\memereview\\src\\utils\\SearchComponent.tsx":"7","D:\\Frontend\\memereview\\src\\ContextApi\\MemeContext.tsx":"8","D:\\Frontend\\memereview\\src\\components\\CreateMeme.tsx":"9","D:\\Frontend\\memereview\\src\\utils\\GeneratedMemeModal.tsx":"10","D:\\Frontend\\memereview\\src\\utils\\Footer.tsx":"11"},{"size":335,"mtime":1612594251452,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1273,"mtime":1612780633010,"results":"15","hashOfConfig":"13"},{"size":5102,"mtime":1612785285059,"results":"16","hashOfConfig":"13"},{"size":728,"mtime":1612620132025,"results":"17","hashOfConfig":"13"},{"size":3464,"mtime":1612697157164,"results":"18","hashOfConfig":"13"},{"size":850,"mtime":1612695668166,"results":"19","hashOfConfig":"13"},{"size":151,"mtime":1612534987215,"results":"20","hashOfConfig":"13"},{"size":6197,"mtime":1612877061058,"results":"21","hashOfConfig":"13"},{"size":1136,"mtime":1612765223671,"results":"22","hashOfConfig":"13"},{"size":2182,"mtime":1612873334922,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1qokioj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\Frontend\\memereview\\src\\index.tsx",[],["48","49"],"D:\\Frontend\\memereview\\src\\reportWebVitals.ts",[],"D:\\Frontend\\memereview\\src\\App.tsx",[],"D:\\Frontend\\memereview\\src\\components\\Navigation.tsx",[],"D:\\Frontend\\memereview\\src\\utils\\MemeComponent.tsx",[],"D:\\Frontend\\memereview\\src\\components\\HomePage.tsx",["50","51"],"import React, { useContext, useEffect, useMemo, useState } from 'react'\r\nimport { Container, Pagination } from 'react-bootstrap'\r\nimport { IMeme } from '../@types/interfaces'\r\nimport { MemeContext } from '../ContextApi/MemeContext'\r\nimport { MemeComponent } from '../utils/MemeComponent'\r\nimport { SearchComponent } from '../utils/SearchComponent'\r\nimport { createFilter } from \"react-search-input\"\r\n\r\n\r\nconst HomePage: React.FC = () => {\r\n\r\n    const memesData = useContext(MemeContext)\r\n    const KEYS_TO_FILTERS = ['name']\r\n    const [searchValue, setSearchValue] = useState<string | null>('')\r\n    const [length, setLength] = useState<number>(1)\r\n\r\n\r\n\r\n\r\n    const [activePage, setActivePage] = useState<number>(0)\r\n    const [currentData, setCurrentData] = useState<IMeme[] | null>()\r\n    console.log(currentData)\r\n    let items: any = [];\r\n\r\n    const filteredMemes = useMemo(() => memesData && memesData.filter(createFilter(searchValue, KEYS_TO_FILTERS)), [searchValue])\r\n\r\n    for (let num: number = 0; num <= length; num++) {\r\n        items.push(\r\n            <Pagination.Item\r\n\r\n                key={num}\r\n                active={num === activePage}\r\n                onClick={() => setActivePage(num)}\r\n            >\r\n                {num + 1}\r\n            </Pagination.Item>,\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLength(memesData ? Math.round(memesData.length / 24) : 1)\r\n    }, [memesData])\r\n\r\n    useEffect(() => {\r\n        const handlePagination = () => {\r\n            if (searchValue) {\r\n                setLength(filteredMemes ? Math.round(filteredMemes.length / 24) : 1)\r\n\r\n                //const currentPageData = filteredEmails && filteredEmails.slice(activePage * 24, (activePage + 1) * 24);\r\n                setCurrentData(filteredMemes)\r\n            } else {\r\n\r\n                setLength(memesData ? Math.round(memesData.length / 24) : 1)\r\n                const currentPageData = memesData && memesData.slice(activePage * 24, (activePage + 1) * 24);\r\n                setCurrentData(currentPageData)\r\n            }\r\n        }\r\n        handlePagination()\r\n    }, [activePage, memesData, searchValue])\r\n\r\n\r\n    return (\r\n        <>\r\n            <SearchComponent setSearchValue={setSearchValue} />\r\n            <Container fluid className=\"text-center text-light bg-warning py-1\">\r\n                <h3>Choose your template</h3>\r\n            </Container>\r\n            {currentData && currentData.length > 0 ?\r\n                <Container fluid className=\"home-meme-container mt-2\">\r\n                    {currentData.map(({ url, box_count, height, id, name, width }) => (\r\n                        <MemeComponent\r\n                            name={name}\r\n                            url={url}\r\n                            id={id}\r\n                            key={id}\r\n                            box_count={box_count}\r\n                            height={height}\r\n                            width={width}\r\n                        />\r\n                    ))\r\n                    }\r\n                </Container> :\r\n                <Container fluid className=\"text-center mt-3 text-light\">\r\n                    <h3>No meme template found for : {searchValue}</h3>\r\n                </Container>\r\n            }\r\n            <Container fluid className=\"d-flex flex-row justify-content-center mt-3\">\r\n                <Pagination size=\"lg\">{items}</Pagination>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","D:\\Frontend\\memereview\\src\\utils\\SearchComponent.tsx",[],"D:\\Frontend\\memereview\\src\\ContextApi\\MemeContext.tsx",[],"D:\\Frontend\\memereview\\src\\components\\CreateMeme.tsx",["52","53"],"D:\\Frontend\\memereview\\src\\utils\\GeneratedMemeModal.tsx",[],"D:\\Frontend\\memereview\\src\\utils\\Footer.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":25,"column":116,"nodeType":"60","endLine":25,"endColumn":129,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":59,"column":8,"nodeType":"60","endLine":59,"endColumn":44,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":19,"column":7,"nodeType":"66","messageId":"67","endLine":19,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":33,"column":7,"nodeType":"66","messageId":"67","endLine":33,"endColumn":24},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'KEYS_TO_FILTERS' and 'memesData'. Either include them or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'filteredMemes'. Either include it or remove the dependency array.",["72"],"@typescript-eslint/no-unused-vars","'boxes' is assigned a value but never used.","Identifier","unusedVar","'generateBoxesLink' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [KEYS_TO_FILTERS, memesData, searchValue]",{"range":"77","text":"78"},"Update the dependencies array to be: [activePage, filteredMemes, memesData, searchValue]",{"range":"79","text":"80"},[963,976],"[KEYS_TO_FILTERS, memesData, searchValue]",[2103,2139],"[activePage, filteredMemes, memesData, searchValue]"]